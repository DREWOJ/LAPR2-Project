@startuml
skinparam classAttributeIconSize 0

package UI {
  class AnalyseCenterPerformanceUI {}
}

package core {
  package domain {
    package stores {
      class VaccinationCenterStore {
        +createVaccinationCenter(name,address,emailAddress,phoneNumber,faxNumber,websiteAddress,openingHours,closingHours,slotDuration,maximumVaccinesPerSlot,coordinator)
        +validateVaccinatonCenter(center)
        +saveVaccinationCenter(center)
        +checkDuplicates(center)
        +getVaccinationCenterWithPhone(phone)

        -addVaccinationCenter(center)
      }
    }

    package lists {
      class CenterEventList {
        - events: List<CenterEvent>

        +CenterEventList()
      }
    }

    package model {
      class VaccinationCenter {
        - name: String
        - address: String
        - emailAddress: String
        - phoneNumber: String
        - faxNumber: String
        - websiteAddress: String
        
        +VaccinationCenter(name,address,emailAddress,phoneNumber,faxNumber,websiteAddress,openingHours,closingHours,slot,coordinator)
      }

      class Employee {
        -id: String 
        -name: String 
        -email: String 
        -phone: String 
        -address: String 
        -citizenCardNumber: int 
        -roleId: String 

        +Employee(name,email,phone,address,citizenCardNumber,roleId)
      }

      class Slot {
        -duration: int
        -maxVaccinesPerSlot: int

        +Slot(duration,maxVaccinesPerSlot)
      }

      class CenterPerformance {
        - day: Date
        - interval: int
        - inputList: List
        - optimalSubList: List
        - optimalSum: int

        +CenterPerformance(day,interval,inputList,optimalSublist,optimalSum)
      }
    }

    class Company {
      -designation: String
      -authFacade: AuthFacade
      -vaccinationCenterStore: VaccinationCenterStore
      
      +Company(designation)

      +getAuthFacade()
      +getVaccinationCenterStore()
    }

    
  }

  package controllers {
    class AnalyseCenterPerformanceController {
      +getCategories()
      +CheckWaitingRoom(ref,designation,informalDesc,technicalDesc,duration,cost,categoryId)
      +saveTask()
    }
  }

  package utils {
    class Time {
      - hour: int
      - minute: int
      
      +Time(hour,minute)
      +Time(time)
    }
  }
}

AnalyseCenterPerformanceUI ..> AnalyseCenterPerformanceController
AnalyseCenterPerformanceController ..> Company

VaccinationCenter o-- Employee : coordinator
VaccinationCenter o-- Time : openingHours
VaccinationCenter o-- Time : closingHours
VaccinationCenter o-- Slot
VaccinationCenter *-- CenterEventList

VaccinationCenter "1" -- "*" CenterPerformance : generates >

CenterPerformance o-- Time : startingInterval
CenterPerformance o-- Time : endingInterval

VaccinationCenterStore "1" -- "*" VaccinationCenter : stores >

Company "1" -- "1" VaccinationCenterStore : knows >

@enduml
