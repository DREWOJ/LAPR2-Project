@startuml US15_SD

actor "Center Coordinator" as COORDINATOR

participant ":ExportCenterStatisticsUI" as UI
participant ":App" as APP
participant ":ExportCenterStatisticsController" as CTRL
participant ":Company" as COMP
participant "exportercsv\n:ExporterCsvData" as EXPORTER
participant "vaccineAdministration\n:VaccineAdministration" as VACADMIN
participant "adminProcess\n:AdminProcess" as ADMINPROC
participant "employeeSession\n:EmployeeSession" as EMPLOYEESESSION
participant "vaccinationCenter\n:VaccinationCenter" as CENTER
participant "vaccineAdministrationList\n:List<VaccineAdministration>" as VACADMINLIST
participant "vaccineAdministrationDayList\n:List<VaccineAdministration>" as VACDAYLIST
participant "vaccine\n:Vaccine" as VACCINE

activate COORDINATOR
COORDINATOR -> UI : asks to export center statistics
activate UI

UI -> APP : comp = app.getCompany()
activate APP
deactivate APP

ref over UI 
**sessions** is obtained through the coordinatorSession
See here: CoordinatorLogin_SD.svg
end ref

UI --> CTRL** : create(company,session)

UI --> COORDINATOR : requests data (filePath,timeInterval)
deactivate UI

COORDINATOR -> UI : types requested data
activate UI

UI -> CTRL : createCsvExporter(filePath,timeInterval)
activate CTRL

CTRL -> EMPLOYEESESSION : center = getVaccinationCenter()
activate EMPLOYEESESSION
deactivate EMPLOYEESESSION

CTRL -> CENTER : vacAdminList = getVaccineAdministrationList()
activate CENTER
deactivate CENTER

CTRL --> EXPORTER** : exporterCsv = create(filePath,timeInterval,center)

loop for each day between timeInterval selected

EXPORTER -> VACADMINLIST : dateEqual = getDate()
activate EXPORTER
activate VACADMIN
deactivate VACADMIN

loop for each vaccineAdministration in vaccineAdministrationList

EXPORTER -> VACADMIN :  snsUserAge = getSNSUserAge()
activate VACADMIN
deactivate VACADMIN

EXPORTER -> VACADMIN : vaccine = getVaccine()
activate VACADMIN
deactivate VACADMIN

EXPORTER -> VACCINE : vacType = getVacType()
activate VACCINE
deactivate VACCINE

EXPORTER -> VACADMIN : dose = getDose()
activate VACADMIN
deactivate VACADMIN

EXPORTER -> VACCINE : adminProcByAge = vaccine.getAdminProc(snsUserAge)
activate VACADMIN
deactivate VACADMIN

EXPORTER -> VACCINE : fullyVaccinated = checkUserFullyVaccinated(age,dose)
activate VACCINE
deactivate VACCINE

opt (fullyVaccinated == true) then snsUser is fully vaccinated 
EXPORTER -> EXPORTER : addSNSUserFullyVaccinated
end

deactivate EXPORTER
deactivate CTRL
end
end

UI --> COORDINATOR : informs operation success

deactivate COORDINATOR 

@enduml