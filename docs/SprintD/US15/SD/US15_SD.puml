@startuml US15_SD

actor "Center Coordinator" as COORDINATOR

participant ":ExportCenterStatisticsUI" as UI
participant ":App" as APP
participant ":ExportCenterStatisticsController" as CTRL
participant ":Company" as COMP
participant "csvexporter\n:CsvExporterData" as EXPORTER
participant "vaccineAdministration\n:VaccineAdministration" as VACADMIN
participant "adminProcess\n:AdminProcess" as ADMINPROC
participant "employeeSession\n:EmployeeSession" as EMPLOYEESESSION
participant "vaccinationCenter\n:VaccinationCenter" as CENTER
participant "vaccineAdministrationList\n:List<VaccineAdministration>" as VACADMINLIST
participant "vaccineAdministrationDayList\n:List<VaccineAdministration>" as VACDAYLIST
participant "vaccine\n:Vaccine" as VACCINE
participant "map\n:Map<String,Integer>" as MAP
participant "filereport\n:FileReport" as FILEREPORT

activate COORDINATOR
COORDINATOR -> UI : asks to export center statistics
activate UI

UI -> APP : comp = app.getCompany()
activate APP
deactivate APP

ref over UI 
**coordinatorSession** is obtained through the coordinatorSession
See here: CoordinatorLogin_SD.svg
end ref

UI --> CTRL** : create(company,coordinatorSession)

UI --> COORDINATOR : requests data (filePath,startDate,endDate)
deactivate UI

COORDINATOR -> UI : types requested data
activate UI

UI -> CTRL : createCsvExporter(filePath,startDate,endDate)
activate CTRL

CTRL -> EMPLOYEESESSION : center = getVaccinationCenter()
activate EMPLOYEESESSION
deactivate EMPLOYEESESSION

CTRL --> EXPORTER** : exporterCsv = create(filePath,startDate,endDate,center)

loop for each day between timeInterval selected
note over EXPORTER
inicialy day refers to the startDate, after iterations this increases by one
until it reaches the endDate
end note

activate EXPORTER

EXPORTER -> CENTER : vacAdminList = getVacAdminDayList(day)
activate CENTER
deactivate CENTER

loop for each vaccineAdministration in vaccineAdministrationList

EXPORTER -> VACADMIN :  snsUserAge = getSNSUserAge()
activate VACADMIN
deactivate VACADMIN

EXPORTER -> VACADMIN : vaccine = getVaccine()
activate VACADMIN
deactivate VACADMIN

EXPORTER -> VACCINE : vacType = getVacType()
activate VACCINE
deactivate VACCINE

EXPORTER -> VACADMIN : dose = getDose()
activate VACADMIN
deactivate VACADMIN

EXPORTER -> VACCINE : adminProcByAge = vaccine.getAdminProc(snsUserAge)
activate VACCINE
deactivate VACCINE

EXPORTER -> VACCINE : fullyVaccinated = checkUserFullyVaccinated(snsUserAge,dose)
activate VACCINE
deactivate VACCINE

opt (fullyVaccinated == true) 
EXPORTER -> MAP : addSNSUserFullyVaccinated(vacType)
activate MAP
deactivate MAP
end

deactivate CTRL
end
end

EXPORTER -> MAP : save()
activate MAP

MAP -> FILEREPORT : saveDate()
activate FILEREPORT
deactivate FILEREPORT
deactivate MAP
deactivate EXPORTER

UI --> COORDINATOR : informs operation success

deactivate COORDINATOR 

@enduml