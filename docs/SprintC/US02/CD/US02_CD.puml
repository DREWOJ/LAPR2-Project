@startuml US02_CD
skinparam classAttributeIconSize 0

class Appointment {
  - date: Date
  - time: String
  +Appointment(SNSUserNumber, date, time, center, vaccineType)
}

class AppointmentSchedule {
  -appointments: List<Appointment[][]>
  +createAppointment(date,user,vaccine)
  +saveAppointment(appointment)

  -getAppointmentDayIndex(date)
  -getAppointmentSlotIndex(hour)
}

class Vaccine   {
  -designation : String
  -brand : String
  -id : String
  -vacType : VaccineType

  +Vaccine(designation, id, brand, vacTypeId)
}

class AppointmentUI {}

class AppointmentController {
  +createAppointment(SNSUserNumber, date, time, center, vaccineType,sms)
  +saveAppointment(appointment)
}

class Company {
  -designation: String
  +getSuggestedVaccineType()
  +getVaccinationCenterStore()
  +getVaccineTypeStore()
}

class SNSUser {
  - citizenCard: String 
  - snsNumber: String 
  - birthDay: Date 
  - gender: Char
  - phoneNumber: String 
  - address: String
  + SNSUser(citizenCard, snsNumber, name, birthDay, gender, phoneNumber, email, address)
   + isEligibleForVaccine(vaccineType)
  }

class UserHealthData {
  - vaccinesTaken: List<VaccinationData>
}

class VaccinationData {
  - batchNumber: int
  - nOfDose: int
  - date: Date
}

class VaccinationCenter{
  - name: String
  - address: String
  - emailAddress: String
  - phoneNumber: String
  - faxNumber: String
  - websiteAddress: String
  - openingHours: String
  - closingHours: String
  - slotDuration: int
  - maximumVaccinesPerSlot: int
  - createdAt: Date
  +VaccinationCenter(name,address,emailAddres,phoneNumber,faxNumber,websiteAddress,openingHours,closingHours,slotDuration,maximumVaccinesPerSlot,coordinator)
}

class VaccinationCenterStore {
  ---
+availableVaccinationCentersList: List<VaccinationCenter>
+getVaccinationCenterByVaccineType(vaccineType)
+createVaccinationCenter(centerData,coordinator)
+validateVaccinatonCenter(center)
-checkDuplicates(center)
+saveVaccinationCenter(center)
}

class VaccineTypeStore {
  +getVaccineTypeByCode(code)
  +getList()
  +addVaccineType()
  +saveVaccineType()
}

class Employee {
  -id: String 
  -name: String 
  -email: String 
  -phone: String 
  -address: String 
  -citizenCardNumber: int 
  -roleId: String 
  +Employee(name,email,phone,address,citizenCardNumber,roleId)
}

class EmployeeStore {}

class SMSSender {
  +sendMessage(appointment)
}

AppointmentUI ..> AppointmentController
AppointmentController ..> Company
Company ..> VaccinationCenterStore
Company ..> VaccineTypeStore
Company ..> AppointmentSchedule
Company ..> EmployeeStore
EmployeeStore "1" -> "*" Employee : stores
VaccinationCenterStore "1" -> "*" VaccinationCenter : stores
Employee ---o VaccinationCenter : coordinator
VaccinationCenter "1" --o "*" Appointment
SNSUser "1" --o "*" Appointment
AppointmentSchedule "1" -> "*" Appointment : stores
VaccinationData o-- Vaccine
VaccinationData o--  VaccinationCenter
UserHealthData  --o SNSUser
UserHealthData "1" -- "*" VaccinationData : stores >
Appointment o-- Vaccine
SMSSender <- Appointment

@enduml