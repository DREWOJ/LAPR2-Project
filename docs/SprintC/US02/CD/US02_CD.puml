@startuml US02_CD
skinparam classAttributeIconSize 0

class Appointment {
  - snsUser : SNSUser
  - date : Date
  - center : VaccinationCenter
  - vaccineType : VaccineType
  - sms : boolean
  +Appointment(SNSUserNumber, date, center, vaccineType, sms)
  +sendSMS()
  +getVaccinationCenter()
}

class AppointmentScheduleList {
  -appointments: List<Appointment[][]>
  +createAppointment(date,user,vaccine)
  +saveAppointment(appointment)

  -getAppointmentDayIndex(date)
  -getAppointmentSlotIndex(hour)
}

class Vaccine   {
  -designation : String
  -brand : String
  -id : String
  -vacType : VaccineType

  +Vaccine(designation, id, brand, vacTypeId)
}

class ScheduleVaccineReceptionistUI {}

class ScheduleVaccineController {
  +createAppointment(appointmentDto)
  +getSuggestedVaccineType()
  +getVaccineTypeByCode(code)
  +getVaccinationCenterByEmail(email)
  +save()
  +existsUser(snsNumber)
}

class Company {
  -designation: String
  +getSuggestedVaccineType()
  +getVaccinationCenterStore()
  +getVaccineTypeStore()
  +getAppointmentScheduleList()
}

class SNSUser {
  - citizenCard: String 
  - snsNumber: String 
  - birthDay: Date 
  - gender: Char
  - phoneNumber: String 
  - address: String
  - userHealthData : UserHealthData
  + SNSUser(citizenCard, snsNumber, name, birthDay, gender, phoneNumber, email, address)
  }

class UserHealthData {
 - vaccinesTaken: List<VaccinationData>
 +isEligibleForVaccine(vaccineType)
}

class VaccinationData {
  - batchNumber: int
  - nOfDose: int
  - date: Date
}

class VaccinationCenter{
  - name: String
  - address: String
  - emailAddress: String
  - phoneNumber: String
  - faxNumber: String
  - websiteAddress: String
  - openingHours: String
  - closingHours: String
  - slotDuration: int
  - maximumVaccinesPerSlot: int
  +VaccinationCenter(name,address,emailAddres,phoneNumber,faxNumber,websiteAddress,openingHours,closingHours,slotDuration,maximumVaccinesPerSlot,coordinator)
  +getAdministeredVaccines()
  +checkAvailability(date,time,vaccineType)
  +addAppointmentToList(appointment)
}

class VaccinationCenterStore {
-availableVaccinationCentersList: List<VaccinationCenter>
+getVaccinationCenterByVaccineType(vaccineType)
}

class VaccineType {}

class VaccineTypeStore {
  -vaccineTypes : List<VaccineType>
  +getVaccineTypes()
}

class SMSSender {
  +sendSMS(phoneNumber,message)
}

class VaccineTypeMapper {
+toDto(vaccineTypes)
}

class VaccinationCenterMapper {
  +toDto(vaccinationCenters)
}

class AppointmentInsertMapper {
  +toDto(appointment)
}

class AppointmentInsertDto {
  -snsUserNumber : String
  -vaccineTypeDescription : String
  -centerName : String
  -date : String
  -sms: String
  +getSNSNumber()
  +getDate()
  +getCenter()
  +getVaccineType()
  +getSmsPermission()
  +toString()
}

class SNSUserStore {
  +checkSNSUserExists(snsNumber)                           
}

class CommunityMassVaccinationCenter {}

class HealthCareCenter {}


ScheduleVaccineReceptionistUI ..> ScheduleVaccineController
ScheduleVaccineController ..> Company
Company ..> VaccinationCenterStore
Company ..> VaccineTypeStore
Company ..> AppointmentScheduleList
Company ..> SNSUserStore
VaccinationCenterStore "1" --> "*" VaccinationCenter : stores
VaccinationCenter "1" --o "*" Appointment
SNSUser "1" --o "*" Appointment
AppointmentScheduleList "1" --> "*" Appointment : stores
VaccinationData o-- Vaccine
VaccinationData o--  VaccinationCenter
UserHealthData  --o SNSUser
UserHealthData "1" -- "*" VaccinationData : stores >
Appointment o-- VaccineType
SMSSender <.. Appointment
VaccineType --o Vaccine 
VaccinationCenterStore ..> Vaccine
ScheduleVaccineController <-- AppointmentInsertDto
ScheduleVaccineController --> ScheduleVaccineReceptionistUI
ScheduleVaccineController ..> VaccinationCenterMapper
ScheduleVaccineController ..> VaccineTypeMapper 
VaccineTypeStore --> VaccineType : stores > 
SNSUserStore --> SNSUser : stores
VaccinationCenter <|-- CommunityMassVaccinationCenter
VaccinationCenter <|-- HealthCareCenter
AppointmentInsertMapper --> AppointmentInsertDto
Appointment --> AppointmentInsertMapper


@enduml