@startuml SD_VaccinationCenter_toDto_List

participant "vaccinationCenterStore\n:VaccinationCenterStore" as CENTERSTORE
participant "vaccineTypeMapper\n:VaccineTypeMapper" as VACCINEMAPPER
participant "vaccinationCenter\n:VaccinationCenter" as CENTER
participant "vaccinationCenterMapper\n:VaccinationCenterMapper" as CENTERMAPPER
participant "availableVaccinationCentersList\n:List<VaccinationCenter>" as CENTERLIST
participant "vaccinationCenterDtoList\n:List<VaccinationCenterDto>" as CENTERDTOLIST
participant "communityMassVaccinationCenter\n:CommunityMassVaccinationCenter"
participant "healthCareCenter\n:HealthCareCenter" 

[o-> CENTERSTORE : getListOfVaccinationCentersWithVaccineType(vaccineTypeDto)
activate CENTERSTORE

CENTERSTORE -> VACCINEMAPPER : vaccineType = toModel(vaccineTypeDto)
activate VACCINEMAPPER

VACCINEMAPPER --> CENTERSTORE : vaccineType
deactivate VACCINEMAPPER



loop for each VaccinationCenter registered in the system
opt center instanceof CMVC

CENTERSTORE -> CENTER : vaccinationCenter instanceof CMVC
activate CENTER 

opt CMVC administers the vaccineType selected
CENTER -> CENTERLIST : availableVaccinationCentersList.add(vaccinationCenter)
activate CENTERLIST
deactivate CENTERLIST
deactivate CENTER
end

alt center instanceof HCC
CENTERSTORE -> CENTER :  vaccinationCenter instance of HCC
activate CENTER
CENTER -> CENTERLIST : availableVaccinationCentersList.add(vaccinationCenter)
activate CENTERLIST
deactivate CENTERLIST
deactivate CENTER
end
end
end

loop for each available vaccinationCenters

CENTERSTORE -> CENTERMAPPER : vaccinationCenterDto = toDto(vaccinationCenter)
activate CENTERMAPPER
deactivate CENTERMAPPER

CENTERSTORE -> CENTERSTORE : vaccinationCenterDtoList.add(vaccinationCenterDto)
activate CENTERSTORE
deactivate CENTERSTORE

end
[<-CENTERSTORE : vaccinationCenterDtoList
deactivate CENTERSTORE

@enduml