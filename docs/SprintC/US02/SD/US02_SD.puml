@startuml US02_SD
autonumber
'hide footbox
actor "Receptionist" as RECEPT

participant ":AppointmentUI" as UI
participant "APP" as APPCLASS
participant "app:APP" as APPINSTANCE
participant ":AppointmentController" as CTRL
participant "comp\n:Company" as COMP
participant "store\n:SNSUserStore" as USERSTORE
participant "store\n:VaccinationCenterStore" as CENTERSTORE
participant "vaccinationCenter\n:VaccinationCenter" as CENTER
participant "availableVaccinationCenters\n:List<VaccinationCenter>" as LISTCENTER
participant "store\n:VaccineStore" as VACCINESTORE
participant "mapper\n:VaccineTypeMapper" as VACTYPEMAPPER
participant "mapper\n:vaccinationCenterMapper" as VACMAPPER
participant "mapper\n:AppointmentMapper" as APPMAPPER
participant "appDto:AppointmentDto" as DTO
participant "store\n:VaccineTypeStore" as VACSTORE
participant "appointmentScheduleList\n:AappointmentScheduleList" as APPLIST
participant "userHealthData\n:UserHealthData" as USERDATA
participant "appointment\n:Appointment" as APPOINT
participant "snsUser\n:SNSUser" as SNSUSER
participant "vaccinationCenter\n:VaccinationCenter" as VACCENTER
participant ":TimeUtils" as TIMEUTILS
participant "vaccinesTypes\n:List<VaccineType>"
participant "administeredVaccines\n:List<Vaccines>"
participant "vaccineTypesDto\n:List<VaccineTypeDto>"


activate RECEPT
RECEPT -> UI : asks to schedule a vaccination
activate UI

UI -> APPCLASS : app=getInstance()
activate APPCLASS
deactivate APPCLASS

UI -> APPINSTANCE : company=app.getCompany()
activate APPINSTANCE
deactivate APPINSTANCE

UI -> CTRL** : create(company)

UI --> RECEPT : requests data (SNSUserNumber)
deactivate UI

RECEPT -> UI : types requested data
activate UI
activate CTRL

CTRL -> COMP : snsUserStore = getSNSUserStore()
activate COMP
deactivate COMP


CTRL -> USERSTORE : exists = checkSNSUserExists()
activate USERSTORE
deactivate USERSTORE 
deactivate CTRL


UI -> CTRL : suggestedVaccineType = getSuggestedVaccineType()
activate CTRL

CTRL -> COMP : vaccineTypeStore = getVaccineTypeStore()
activate COMP
deactivate COMP

CTRL -> COMP : vaccineTypeCode = getOngoingOutbreakVaccineTypeCode()
activate COMP
deactivate COMP

CTRL -> VACSTORE : vaccineType = getVaccineTypeCode()
activate VACSTORE
deactivate VACSTORE

CTRL --> UI : vaccineType
deactivate CTRL

UI --> RECEPT : shows suggested vaccine type and asks to accept it
deactivate UI

RECEPT -> UI : accepts the suggested vaccine type
activate UI

UI -> CTRL : isUserEligibleForVaccine(vaccineType,snsNumber)
activate CTRL

CTRL -> CTRL : checkAdministrationProcessForVaccineType(vaccineType)
activate CTRL

CTRL -> USERSTORE : findUserByNumber(snsNumber)
activate USERSTORE
deactivate USERSTORE

CTRL -> SNSUSER : birthDay = getBirthDay()
activate SNSUSER
deactivate SNSUSER

CTRL -> TIMEUTILS : age = calculateAge(birthDay)
activate TIMEUTILS
deactivate TIMEUTILS

CTRL -> COMP : vaccineStore = getVaccineStore()
activate COMP
deactivate COMP

CTRL -> VACCINESTORE : areVaccinesWithValidAdminProcessWithVaccineType(age,vaccineType)
activate VACCINESTORE
deactivate VACCINESTORE
deactivate CTRL

CTRL --> UI : true/false

deactivate CTRL

opt declines the suggested vaccine type or message 24 returns false
UI -> CTRL : getListOfVaccineTypes()
activate CTRL

CTRL -> COMP : getVaccineTypeStore()
activate COMP
deactivate COMP

CTRL -> VACSTORE : vaccineTypes = getVaccineTypes()
activate VACSTORE
deactivate VACSTORE

CTRL -> VACTYPEMAPPER : vaccineTypesDto = toDto(vaccineTypes)
activate VACTYPEMAPPER
deactivate VACTYPEMAPPER
deactivate CTRL

UI --> RECEPT : shows all vaccine types and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccine type
activate UI
end

UI -> CTRL : isUserEligibleForVaccine(vaccineType,snsNumber)
activate CTRL

CTRL -> CTRL : userHasTakenAnyVaccineFromVaccineType(vaccineType)
activate CTRL 

CTRL -> USERSTORE : snsUser = findSNSUserByNumber(snsNumber)
activate USERSTORE
deactivate USERSTORE

CTRL -> SNSUSER : hasTakenAnyVaccineFromVaccineType(vaccineType)
activate SNSUSER

SNSUSER -> SNSUSER : hasTakenAnyVaccineFromVaccineType(vaccineType)
activate SNSUSER

SNSUSER -> USERDATA : vaccine = getLastTakenVaccineFromType(vaccineType)
deactivate SNSUSER
deactivate SNSUSER

CTRL -> COMP : vaccinationCenterStore = getVaccinationCenterStore()
activate COMP
deactivate COMP

CTRL -> COMP : getVaccineStore()
activate COMP
deactivate COMP

CTRL -> CENTERSTORE : availableVaccinationCenters = getListOfVaccinationCentersWithVaccineType(vaccineType)
activate CENTERSTORE
CENTERSTORE -> LISTCENTER**
deactivate CENTERSTORE

CTRL -> VACMAPPER : availableVaccinationCentersDTO = toDto(availableVaccinationCenters)
activate VACMAPPER
deactivate VACMAPPER

deactivate CTRL

UI --> RECEPT : shows all available vaccination centers with that vaccine type and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccination center
activate UI

note right
date has the day and the time selected
end note
UI --> RECEPT : requests data(date)
deactivate UI

RECEPT -> UI : types request data
activate UI

UI -> CTRL : availability = centerAvailability(date)
activate CTRL

CTRL -> LISTCENTER : availability = centerAvailability(date)
activate LISTCENTER
deactivate LISTCENTER
deactivate CTRL


UI --> RECEPT : asks permission to send sms about the scheduled vaccine
deactivate UI
RECEPT -> UI : accepts or declines the request
activate UI

UI -> CTRL : createAppointment()
activate CTRL

CTRL -> COMP : getAppointmentStore()
activate COMP
deactivate COMP

note right 
appoint has all information needed to create an appointment (SNS User Number,date,time,vaccination center,vaccine type,sms)
end note

CTRL -> APPLIST : appointment = createAppoinment(appoint)
activate APPLIST

APPLIST -> APPLIST : checkDuplicates(snsUserNumber,date,time)
activate APPLIST
deactivate APPLIST

APPLIST -> USERDATA : isEligibleForVaccine(vaccineType)
activate USERDATA
deactivate USERDATA

APPLIST -> VACCENTER : checkAvailability(date,time,vaccineType)
activate VACCENTER
deactivate VACCENTER

APPLIST -> APPOINT** : create(SNSUserNumber,date,time,center,vaccineType,SMS)

APPLIST -> APPMAPPER : appoinmentDto = toDto(appointment)
activate APPMAPPER
deactivate APPLIST

APPMAPPER --> CTRL : appointmentDto
deactivate APPMAPPER

note right 
    appointment has all the relevant information of the scheduled vaccine to display to the receptionist
end note

CTRL --> UI : appointmentDto
deactivate CTRL

UI --> RECEPT : shows all data and requests confirmation
deactivate UI
RECEPT -> UI : confirms the data
activate UI

UI -> CTRL : saveAppointment()
activate CTRL

CTRL -> APPLIST : saveAppointment(appointment)
activate APPLIST

APPLIST -> APPLIST : validateAppointment(appointment)
activate APPLIST
deactivate APPLIST

APPLIST -> APPOINT : vaccinationCenter = getVaccinationCenter()
activate APPOINT
deactivate APPOINT

APPLIST -> VACCENTER : addAppointmentToList(appointment)
activate VACCENTER
deactivate VACCENTER

APPLIST -> APPLIST : addAppointment()
activate APPLIST
deactivate APPLIST

APPLIST -> APPOINT : sendSMS()
activate APPOINT

alt sms==true
APPOINT -> APPOINT : smsContent = getSmsContent()
activate APPOINT
deactivate APPOINT

APPOINT -> SNSUSER : phoneNumber = getPhoneNumber()
activate SNSUSER
deactivate SNSUSER

APPOINT -> APPOINT : sendSMS(phoneNumber,smsContent)
activate APPOINT
deactivate APPOINT
end

deactivate APPLIST
deactivate CTRL

UI --> RECEPT : informs operation success
deactivate UI

deactivate RECEPT

@enduml