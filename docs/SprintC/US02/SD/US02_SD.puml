@startuml US02_SD
autonumber
'hide footbox
actor "Receptionist" as RECEPT

participant ":AppointmentUI" as UI
participant "APP" as APPCLASS
participant "app:APP" as APPINSTANCE
participant ":AppointmentController" as CTRL
participant "comp\n:Company" as COMP
participant "store\n:SNSUserStore" as USERSTORE
participant "store\n:VaccinationCenterStore" as CENTERSTORE
participant "vaccinationCenter\n:VaccinationCenter" as CENTER
participant "availableVaccinationCenters\n:List<VaccinationCenter>" as LISTCENTER
participant "store\n:VaccineStore" as VACCINESTORE
participant "store\n:VaccineTypeStore" as VACSTORE
participant "mapper\n:VaccineTypeMapper" as VACTYPEMAPPER
participant "mapper\n:vaccinationCenterMapper" as VACMAPPER
participant "mapper\n:AppointmentMapper" as APPMAPPER
participant "appDto:AppointmentDto" as DTO
participant "appointmentScheduleList\n:AappointmentScheduleList" as APPLIST
participant "userHealthData\n:UserHealthData" as USERDATA
participant "appointment\n:Appointment" as APPOINT
participant "snsUser\n:SNSUser" as SNSUSER
participant "vaccinationCenter\n:VaccinationCenter" as VACCENTER
participant ":TimeUtils" as TIMEUTILS
participant "vaccinesTypes\n:List<VaccineType>"
participant "administeredVaccines\n:List<Vaccines>"
participant "vaccineTypesDto\n:List<VaccineTypeDto>"


activate RECEPT
RECEPT -> UI : asks to schedule a vaccination
activate UI

UI -> APPCLASS : app=getInstance()
activate APPCLASS
deactivate APPCLASS

UI -> APPINSTANCE : company=app.getCompany()
activate APPINSTANCE
deactivate APPINSTANCE

UI -> CTRL** : create(company)

activate CTRL
CTRL -> COMP : vaccineTypeStore = getVaccineTypeStore()
activate COMP
deactivate COMP
CTRL -> COMP : vaccinationCenterStore = getVaccinationCenterStore()
activate COMP
deactivate COMP
CTRL -> COMP : snsUserStore = getSnsUserStore()
activate COMP
deactivate COMP
CTRL -> COMP : vaccineStore = getVaccineStoreStore()
activate COMP
deactivate COMP
deactivate CTRL

UI --> RECEPT : requests data (SNSUserNumber)
deactivate UI

RECEPT -> UI : types requested data
activate UI
activate CTRL

UI -> CTRL : vaccineTypeDto = getSuggestedVaccineType()

CTRL -> VACSTORE : vaccineType = getVaccineTypeByCode(company.getOngoingOutBreakVaccineTypeCode())
activate VACSTORE
deactivate VACSTORE

CTRL -> VACMAPPER : vaccineTypeDto = toDto(vaccineType)
activate VACMAPPER
deactivate VACMAPPER

CTRL --> UI : vaccineTypeDto
deactivate CTRL

UI --> RECEPT : shows suggested vaccine type and asks to accept it
deactivate UI

RECEPT -> UI : accepts the suggested vaccine type
activate UI

deactivate CTRL

opt declines the suggested vaccine type
UI -> CTRL : listVaccineTypeDto = getListOfVaccineTypes()
activate CTRL

CTRL -> VACSTORE : listVaccineType = getList()
activate VACSTORE

VACSTORE -> VACTYPEMAPPER : vaccineDto = toDto(vaccineType)
activate VACTYPEMAPPER
deactivate VACSTORE

ref over VACTYPEMAPPER
SD_VaccineType_toDto_List
end ref

VACTYPEMAPPER --> CTRL : vaccineTypeListDto
deactivate VACTYPEMAPPER

CTRL --> UI : vaccineTypeListDto
deactivate CTRL

UI --> RECEPT : shows all vaccine types and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccine type
activate UI
end

UI -> CTRL : listVaccinationCenterListDto = getListOfVaccinationCentersWithVaccineType(vaccineTypeDto)
activate CTRL

CTRL -> CENTERSTORE :  listVaccinationCenterListDto = getListOfVaccinationCentersWithVaccineType(vaccineTypeDto)
activate CENTERSTORE

ref over CENTERSTORE
SD_VaccinationCenter_toDto_List
end ref

CENTERSTORE --> CTRL : vaccinationCenterListDto
deactivate CENTERSTORE

CTRL --> UI : vaccinationCenterListDto
deactivate CTRL

UI --> RECEPT : shows all available vaccination centers with that vaccine type and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccination center
activate UI

UI --> RECEPT : requests data(date,time)
deactivate UI

RECEPT -> UI : types request data
activate UI

UI --> RECEPT : asks permission to send sms about the scheduled vaccine
deactivate UI

RECEPT -> UI : accepts or declines the request
activate UI

UI -> CTRL : createAppointment(snsNumber,date,time,vacCenterDto,vaccineTpeDto,sms)
activate CTRL

CTRL -> CENTERSTORE : center = getVaccinationCenterWithEmail(centerDto.getEmail())
activate CENTERSTORE
deactivate CENTERSTORE

CTRL -> APPLIST : appointmentSchedule = center.getAppointmentList();
activate APPLIST
deactivate APPLIST

CTRL -> USERSTORE : snsUser = findSNSUserByNumber(snsNumber)
activate USERSTORE
deactivate USERSTORE

CTRL -> APPLIST : appointment = createAppointment(snsUser,dateAndTime,vaccineTypeDto,sms)
activate APPLIST

APPLIST -> APPOINT** : create(snsUser,date,vaccinationCenter,vaccineType,sms)
deactivate APPLIST

CTRL -> APPLIST : validateAppointment(appointment)
activate APPLIST
deactivate APPLIST
deactivate CTRL

UI --> RECEPT : shows all data and requests confirmation
deactivate UI

RECEPT -> UI : confirms the data
activate UI

UI -> CTRL : save()
activate CTRL

CTRL -> APPLIST : saveAppointment(appointment)
activate APPLIST

APPLIST -> APPLIST : validateAppointment(appointment)
activate APPLIST
deactivate APPLIST

APPLIST -> APPOINT : key = generateKeyFromDate(appointment.getDate())
activate APPOINT
deactivate APPOINT

APPLIST -> APPOINT : slotIndex = getAppoitmentSlotIndex(appointment.getDate())
activate APPOINT
deactivate APPOINT

opt exists schedule for that day 
APPLIST -> APPLIST : i = getAvailableIndexInSlot(slots[slotIndex])
activate APPLIST
APPLIST -> APPLIST : appointment = slots[slotIndex][i]
activate APPLIST
alt
APPLIST -> APPLIST : appointment = slots[slotIndex][0]
activate APPLIST
deactivate APPLIST
end
end
deactivate CTRL

UI --> RECEPT : informs operation success
deactivate UI

deactivate RECEPT

@enduml