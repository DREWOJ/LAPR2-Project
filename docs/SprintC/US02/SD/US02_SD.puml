@startuml US02_SD
autonumber
'hide footbox
actor "Receptionist" as RECEPT

participant ":AppointmentUI" as UI
participant ":Application" as APP
participant ":AppointmentController" as CTRL
participant "comp\n:Company" as COMP
participant "store\n:VaccinationCenterStore" as CENTERSTORE
participant "vaccinationCenter\n:VaccinationCenter" as CENTER
participant "availableVaccinationCenters\n:List<VaccinationCenter>" as LISTCENTER
participant "vaccine\n:Vaccine" as VACCINE
participant "mapper\n:vaccinationCenterMapper" as VACMAPPER
participant "mapper\n:AppointmentMapper" as APPMAPPER
participant "appDto:AppointmentDto" as DTO
participant "store\n:VaccineTypeStore" as VACSTORE
participant "store\n:AppointmentStore" as APPSTORE
participant "userHealthData\n:UserHealthData" as USERDATA
participant "appointment\n:Appointment" as APPOINT
participant "snsUser\n:SNSUser" as SNSUSER
participant "vaccinationCenter\n:VaccinationCenter" as VACCENTER
participant "vaccinesTypes\n:List<VaccineType>"
participant "administeredVaccines\n:List<Vaccines>"


activate RECEPT
RECEPT -> UI : asks to schedule a vaccination
activate UI

UI -> APP : app=getInstance()
activate APP
deactivate APP

UI -> APP : company=app.getCompany()
activate APP
deactivate APP

UI -> CTRL** : create(company)

UI --> RECEPT : requests data (SNSUserNumber, date, time)
deactivate UI

RECEPT -> UI : types requested data
activate UI

UI -> CTRL : suggestedVaccineType = getSuggestedVaccineType()
activate CTRL

CTRL -> COMP : suggestedVaccineType = getSuggestedVaccineType()
activate COMP
deactivate CTRL
deactivate COMP

UI --> RECEPT : shows suggested vaccine type and asks to accept it
deactivate UI

RECEPT -> UI : accepts the suggested vaccine type
activate UI

opt declines the suggested vaccine type
UI -> CTRL : getListOfVaccineTypes()
activate CTRL

CTRL -> COMP : getVaccineTypeStore()
activate COMP
deactivate COMP

CTRL -> VACSTORE : vacList = getVaccineList()
activate VACSTORE
deactivate VACSTORE
deactivate CTRL

UI --> RECEPT : shows all vaccine types and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccine type
activate UI
end

UI -> CTRL : getListOfVaccinationCentersWithVaccineType(vaccineType)
activate CTRL

CTRL -> COMP : vaccinationCenterStore = getVaccinationCenterStore()
activate COMP
deactivate COMP

CTRL -> COMP : getVaccineStore()
activate COMP
deactivate COMP

CTRL -> CENTERSTORE : availableVaccinationCenters = getVaccinationCentersByVaccineType(vaccineType)
activate CENTERSTORE
CENTERSTORE --> LISTCENTER**
loop for each vaccinationCenter
CENTERSTORE -> CENTER : administeredVaccines = getAdministeredVaccines()
activate CENTER
deactivate CENTER
loop for each administeredVaccine
CENTERSTORE -> VACCINE : v = hasVaccineType(vaccineType)
activate VACCINE
VACCINE --> CENTERSTORE : true/false
deactivate VACCINE
alt v == true
CENTERSTORE -> LISTCENTER : add(vaccinationCenter)
activate LISTCENTER
deactivate LISTCENTER
end
end
end
deactivate CENTERSTORE

CTRL -> VACMAPPER : availableVaccinationCentersDTO = toDto(availableVaccinationCenters)
activate VACMAPPER
deactivate VACMAPPER

deactivate CTRL

UI --> RECEPT : shows all available vaccination centers and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccination center
activate UI

UI --> RECEPT : requests to send information about the scheduled vaccine
deactivate UI
RECEPT -> UI : accepts or declines the request
activate UI

UI -> CTRL : createAppointment(dto)
activate CTRL

CTRL -> COMP : getAppointmentStore()
activate COMP

note right 
dto has all information needed to create an appointment (SNS User Number,date,time,vaccination center,vaccine type,sms)
end note
CTRL -> COMP : appointment = createAppointment(dto)

COMP -> APPMAPPER : appointmentDTO = toDto(appointment)
activate APPMAPPER
deactivate COMP

APPMAPPER -> DTO : SNSUserNumber = appointment.getSNSNumber()
activate DTO
deactivate DTO

APPMAPPER -> DTO : date = appointment.getDate()
activate DTO
deactivate DTO

APPMAPPER -> DTO : time = appointment.getTime()
activate DTO
deactivate DTO

APPMAPPER -> DTO : center=appointment.getVaccinationCenter()
activate DTO
deactivate DTO

APPMAPPER -> DTO : vaccineType = appointment.getVaccineType()
activate DTO
deactivate DTO

APPMAPPER -> DTO : userHealthData = appointment.getUserHealthData() 
activate DTO
deactivate DTO

APPMAPPER -> APPSTORE : create(SNSUserNumber,date,time,center,vaccineType,SMS)
activate APPSTORE

APPSTORE -> APPSTORE : checkDuplicates(snsUserNumber,date,time)
activate APPSTORE
deactivate APPSTORE

APPSTORE -> USERDATA : isEligibleForVaccine(vaccineType)
activate USERDATA
deactivate USERDATA

APPSTORE -> VACCENTER : checkAvailability(date,time,vaccineType)
activate VACCENTER
deactivate VACCENTER

APPSTORE -> APPOINT** : create(SNSUserNumber,date,time,center,vaccineType,SMS)
deactivate APPMAPPER
deactivate APPSTORE

CTRL -> APPSTORE : validateAppointment()
activate APPSTORE
deactivate CTRL
deactivate APPSTORE


UI --> RECEPT : shows all data and requests confirmation
deactivate UI
RECEPT -> UI : confirms the data
activate UI

UI -> CTRL : saveAppointment()
activate CTRL

CTRL -> APPSTORE : saveAppointment(appointment)
activate APPSTORE

APPSTORE -> APPOINT : vaccinationCenter = getVaccinationCenter()
activate APPOINT
deactivate APPOINT

APPSTORE -> VACCENTER : addAppointmentToList(appointment)
activate VACCENTER
deactivate VACCENTER

APPSTORE -> APPSTORE : addAppointment()
activate APPSTORE
deactivate APPSTORE

APPSTORE -> APPOINT : sendSMS()
activate APPOINT

alt sms==true
APPOINT -> APPOINT : smsContent = getSmsContent()
activate APPOINT
deactivate APPOINT

APPOINT -> SNSUSER : phoneNumber = getPhoneNumber()
activate SNSUSER
deactivate SNSUSER

APPOINT -> APPOINT : sendSMS(phoneNumber,smsContent)
activate APPOINT
deactivate APPOINT
end


deactivate APPSTORE
deactivate CTRL

UI --> RECEPT : informs operation success
deactivate UI

deactivate RECEPT

@enduml