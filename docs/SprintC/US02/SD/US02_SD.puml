@startuml US02_SD
autonumber
'hide footbox
actor "Receptionist" as RECEPT

participant ":AppointmentUI" as UI
participant ":Application" as APP
participant ":AppointmentController" as CTRL
participant "comp\n:Company" as COMP
participant "store\n:VaccinationCenterStore" as CENTER
participant "mapper\n:AppointmentMapper" as MAPPER
participant "appDto:AppointmentDto" as DTO
participant "store\n:VaccineTypeStore" as VACSTORE
participant "store\n:AppointmentStore" as APPSTORE
participant "appointment\n:Appointment" as APPOINT
participant "list\n:VaccineList"

activate RECEPT
RECEPT -> UI : asks to schedule a vaccination
activate UI

UI -> APP : app=getInstance()
activate APP
deactivate APP

UI -> APP : company=app.getCompany()
activate APP
deactivate APP

UI -> CTRL** : create(company)

UI --> RECEPT : requests data (SNSUserNumber, date, time)
deactivate UI

RECEPT -> UI : types requested data
activate UI

UI -> CTRL : suggestedVaccineType = getSuggestedVaccineType()
activate CTRL

CTRL -> COMP : suggestedVaccineType = getSuggestedVaccineType()
activate COMP
deactivate CTRL
deactivate COMP

UI --> RECEPT : shows suggested vaccine type and asks to accept it
deactivate UI

RECEPT -> UI : accepts the suggested vaccine type
activate UI

opt declines the suggested vaccine type
UI -> CTRL : getListOfVaccineTypes()
activate CTRL

CTRL -> COMP : getVaccineTypeStore()
activate COMP
deactivate COMP

CTRL -> VACSTORE : vacList = getVaccineList()
activate VACSTORE
deactivate VACSTORE
deactivate CTRL

UI --> RECEPT : shows all vaccine types and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccine type
activate UI
end

UI -> CTRL : getListOfVaccinationCentersWithVaccineType(vaccineType)
activate CTRL

CTRL -> COMP : vaccinationCenterStore = getVaccinationCenterStore()
activate COMP
deactivate COMP

CTRL -> COMP : getVaccineStore()
activate COMP
deactivate COMP

CTRL -> CENTER : availableVaccinationCenters = getVaccinationCentersByVaccineType(vaccineType)
activate CENTER
deactivate CENTER
deactivate CTRL

UI --> RECEPT : shows all available vaccination centers and asks to select one
deactivate UI

RECEPT -> UI : selects a vaccination center
activate UI

UI --> RECEPT : requests to send information about the scheduled vaccine
deactivate UI
RECEPT -> UI : accepts or declines the request
activate UI

UI -> CTRL : createAppointment(dto)
activate CTRL

note right 
dto has all information needed to create an appointment (SNS User Number,date,time,vaccination center,vaccine type,sms)
end note
CTRL -> COMP : appointment = createAppointment(dto)
activate COMP

COMP -> MAPPER : appointmentDTO = toDto(appointment)
activate MAPPER
deactivate COMP

MAPPER -> DTO : SNSUserNumber = appointment.getSNSNumber()
activate DTO
deactivate DTO

MAPPER -> DTO : date = appointment.getDate()
activate DTO
deactivate DTO

MAPPER -> DTO : time = appointment.getTime()
activate DTO
deactivate DTO

MAPPER -> DTO : center=appointment.getVaccinationCenter()
activate DTO
deactivate DTO

MAPPER -> DTO : vaccineType = appointment.getVaccineType()
activate DTO
deactivate DTO

MAPPER -> DTO : sms = appointment.getSms() 
activate DTO
deactivate DTO


MAPPER -> APPSTORE : create(SNSUserNumber,date,time,center,vaccineType,SMS)
activate APPSTORE

APPSTORE -> APPOINT** : create(SNSUserNumber,date,time,center,vaccineType,SMS)
deactivate MAPPER
deactivate APPSTORE

CTRL -> APPSTORE : validateAppointment()
activate APPSTORE
deactivate CTRL
deactivate APPSTORE


UI --> RECEPT : shows all data and requests confirmation
deactivate UI
RECEPT -> UI : confirms the data
activate UI

UI -> CTRL : saveAppointment()
activate CTRL

CTRL -> APPSTORE : saveAppointment(appointment)
activate APPSTORE

APPSTORE -> APPSTORE : checkDuplicates()
activate APPSTORE
deactivate APPSTORE

APPSTORE -> APPSTORE : addAppointment()
activate APPSTORE
deactivate APPSTORE
deactivate APPSTORE
deactivate CTRL

UI --> RECEPT : informs operation success
deactivate UI

deactivate RECEPT

@enduml